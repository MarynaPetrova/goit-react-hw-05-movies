{"version":3,"file":"static/js/98.b019edc8.chunk.js","mappings":"iMAEAA,EAAAA,EAAMC,SAASC,QAAU,+BACzB,MAAMC,EAAU,mCACVC,EAAO,iBAEAC,EAAcC,gBACFN,EAAAA,EAAMO,IAAI,+BAADC,OAAgCL,KAChDM,KAGLC,EAAsBJ,MAAOK,EAAOC,WACxBZ,EAAAA,EAAMO,IAAI,uBAADC,OACPG,EAAK,KAAAH,OAAIJ,EAAI,UAAAI,OAASI,EAAI,aAAAJ,OAAYL,KAE/CM,KAGLI,EAAoBP,gBACRN,EAAAA,EAAMO,IAAI,UAADC,OAAWM,EAAE,KAAAN,OAAIJ,EAAI,aAAAI,OAAYL,KACjDM,KAGLM,EAAYT,gBACAN,EAAAA,EAAMO,IAAI,UAADC,OACpBM,EAAE,aAAAN,OAAYJ,EAAI,aAAAI,OAAYL,KAE1BM,KAGLO,EAAeV,gBACHN,EAAAA,EAAMO,IAAI,UAADC,OACpBM,EAAE,aAAAN,OAAYJ,EAAI,oBAAAI,OAAmBL,KAEjCM,I,6FChCX,MAAMQ,EAAiBC,IAAiB,IAAhB,OAAEC,GAAQD,EACvC,MAAME,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAAA,MAAAC,SACGJ,EAAOK,KAAIC,IACVH,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAE,UAAAnB,OAAYiB,EAAMX,IAAMc,MAAO,CAAEC,KAAMT,GAAWG,SACvDE,EAAMK,SAFFL,EAAMX,OAMd,E,+BCRM,SAASiB,IACtB,MAAOZ,EAAQa,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,GAoB3C,OAlBAG,EAAAA,EAAAA,YAAU,MACR9B,iBACE,IACE6B,GAAa,GACb,MAAM,QAAEE,SAAkBhC,EAAAA,EAAAA,MAC1B2B,EAAUK,EACZ,CAAE,MAAOC,GACPC,IAAAA,OAAgBC,QACd,qDAEJ,CAAC,QACCL,GAAa,EACf,CACF,CAEAM,EAAgB,GACf,KAGDC,EAAAA,EAAAA,MAAA,OAAAnB,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,mBACHW,IACCZ,EAAAA,EAAAA,KAAAqB,EAAAA,SAAA,CAAApB,UACED,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,OAGXtB,EAAAA,EAAAA,KAACL,EAAc,CAACE,OAAQA,MAG9B,C","sources":["api.js","components/TrendMovieList.jsx","pages/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c4cadb3d157e55315d13da915983f2ee';\nconst LANG = 'language=en-US';\n\nexport const fetchMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMoviesBySearch = async (query, page) => {\n  const response = await axios.get(\n    `/search/movie?query=${query}&${LANG}&page=${page}&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`/movie/${id}?${LANG}&api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?${LANG}&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?${LANG}&page=1&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n","import { Link, useLocation } from 'react-router-dom';\n\nexport const TrendMovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { fetchMovies } from '../api';\nimport { TrendMovieList } from '../components/TrendMovieList';\nimport { Loader } from '../components/Loader';\nimport Notiflix from 'notiflix';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function getTrendMovies() {\n      try {\n        setIsLoading(true);\n        const { results } = await fetchMovies();\n        setMovies(results);\n      } catch (error) {\n        Notiflix.Notify.failure(\n          'Oops, something went wrong, try reloading the page'\n        );\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getTrendMovies();\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending today</h1>\n      {isLoading && (\n        <>\n          <Loader />\n        </>\n      )}\n      <TrendMovieList movies={movies} />\n    </div>\n  );\n}\n"],"names":["axios","defaults","baseURL","API_KEY","LANG","fetchMovies","async","get","concat","data","fetchMoviesBySearch","query","page","fetchMovieDetails","id","fetchCast","fetchReviews","TrendMovieList","_ref","movies","location","useLocation","_jsx","children","map","movie","Link","to","state","from","title","HomePage","setMovies","useState","isLoading","setIsLoading","useEffect","results","error","Notiflix","failure","getTrendMovies","_jsxs","_Fragment","Loader"],"sourceRoot":""}